version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: vaero_dev
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API (for production-like testing)
  backend:
    build: .
    restart: unless-stopped
    ports:
      - "4000:4000"
    environment:
      DATABASE_URL: "postgresql://postgres:password@postgres:5432/vaero_dev"
      REDIS_URL: "redis://redis:6379"
      CLERK_PUBLISHABLE_KEY: "${CLERK_PUBLISHABLE_KEY}"
      CLERK_SECRET_KEY: "${CLERK_SECRET_KEY}"
      OPENAI_API_KEY: "${OPENAI_API_KEY}"
      YR_USER_AGENT: "Vaero Weather App v1.0.0 (contact@vaero.com)"
      YR_FROM_EMAIL: "contact@vaero.com"
      PORT: 4000
      NODE_ENV: production
      ALLOWED_ORIGIN: "http://localhost:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./.env:/app/.env

volumes:
  postgres_data:
  redis_data:
